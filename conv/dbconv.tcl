#!/usr/bin/tclsh

if { $argc <= 0 } {
  puts "usage: $argv0 <directory>"
  exit 1
}

set dir [lindex $argv 0]
if { ! [file exists $dir] || ! [file isdirectory $dir] } {
  puts "Invalid directory $dir"
  exit 1
}

set hsize 128
set rsize 2048

puts "## Converting musicdb.txt"
set fh [open [file join $dir musicdb.txt] r]
gets $fh line
gets $fh line
gets $fh line
gets $fh line
regexp {^#RAMAX=(\d+)$} $line all racount
close $fh

set fh [open [file join data musicdb.dat] w]

source [file joi $dir musicdb.txt]

set c 0
dict for {fn data} $musicdbList {
  incr c
}

puts $fh "#VERSION=10"
puts $fh "# Do not edit this file."
puts $fh "#RASIZE=2048"
puts $fh "#RACOUNT=$c"

set newrrn 1
dict for {fn data} $musicdbList {
  seek $fh [expr {([dict get $data rrn] - 1) * $rsize + $hsize}]
  puts $fh "FILE\n..$fn"

  # sort it now, make it easier
  foreach {tag} [lsort [dict keys $data]] {
    if { $tag eq "BDJSYNCID" } {
      # not wanted
      continue
    }
    if { $tag eq "FILE" } {
      # already
      continue
    }
    if { $tag eq "rrn" } {
      # make sure rrn is correct
      set value $newrrn
    }
    set value [dict get $data $tag]
    puts $fh "$tag\n..$value"
  }
  incr newrrn
}

close $fh
exit 0
